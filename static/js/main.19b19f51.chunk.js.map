{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/Notfound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","prototypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","console","log","Header","branding","href","About","Notfound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19b19f51.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n            case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                    contact.id !== action.payload)\n            };\n            case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n            case 'UPDATE_CONTACT':\n                return {\n                    ...state,\n                    contacts: state.contacts.map(contact =>\n                        contact.id === action.payload.id \n                        ? (contact = action.payload)\n                        : contact\n                  )\n                };\n            default:\n                 return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => \n            this.setState(state => reducer(state, action))\n    };\n\n    // Lifecycle Method\n    async componentDidMount() {\n        // saved the get response to a variable \n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        // used the new variable.data to setState\n        this.setState({contacts: res.data});\n             \n}\n\n    render() {\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n\n class Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    };\n\n    onShowClick = e => {\n        this.setState({ showContactInfo: !this.state.showContactInfo });\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n       try { \n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch (e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id});    \n        }\n    };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return(\n                    <div className=\"card card-body mb-3\">\n                    <h4>{name} {' '} <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{ cursor: 'pointer'}}></i> \n                    <i className=\"fas fa-times\" onClick={this.onDeleteClick.bind(this, id, dispatch)} style={{ cursor: 'pointer', float: 'right', color: 'red'}}></i>\n                    <Link to={`contact/edit/${id}`}>\n                        <i className=\"fas fa-pencil-alt\" style={{\n                            cursor: 'pointer',\n                            float: 'right',\n                            color: 'black',\n                            marginRight: '1rem'\n                        }}></i>\n                    </Link>\n                    </h4>\n                    {showContactInfo ? (<ul className=\"list-group\">\n                    <li className=\"list-group-item\">Email: {email}</li>\n                    <li className=\"list-group-item\">Phone: {phone}</li>\n                    </ul>) : null}\n                    </div>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nContact.prototypes = {\n    contact: PropTypes.object.isRequired,\n}\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact List</span></h1>\n            {contacts.map(contact => (\n            <Contact \n                key={contact.id}\n                contact={contact}\n            />\n        ))}\n      </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classname';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange, \n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                type={type}\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div> }\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\n\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    //All of the functions \n    onChange = e => this.setState({\n        [e.target.name]: e.target.value\n    });\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {\n            name,\n            email,\n            phone\n        } = this.state;\n\n        // Check fields for errors\n        if(name === '') {\n            this.setState({errors: {name: 'Please enter name'}});\n            return;\n        }\n\n        if(email === '') {\n            this.setState({errors: {email: 'Please enter email'}});\n            return;\n        }\n\n        if(phone === '') {\n            this.setState({errors: {phone: 'Please add phone number'}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n\n        // Send POST request to the API\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n            dispatch({\n                type: 'ADD_CONTACT',\n                payload: res.data\n            });\n\n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {\n            name,\n            email,\n            phone,\n            errors\n        } = this.state;\n\n        return ( \n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header text-center\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone Number...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input \n                                        type=\"submit\" \n                                        value=\"Add Contact\"\n                                        className=\"btn btn-dark btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                 }}\n\n            </Consumer>\n        );\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\n\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        console.log(contact);\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    //All of the functions \n    onChange = e => this.setState({\n        [e.target.name]: e.target.value\n    });\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {\n            name,\n            email,\n            phone\n        } = this.state;\n\n        // Check fields for errors\n        if(name === '') {\n            this.setState({errors: {name: 'Please enter name'}});\n            return;\n        }\n\n        if(email === '') {\n            this.setState({errors: {email: 'Please enter email'}});\n            return;\n        }\n\n        if(phone === '') {\n            this.setState({errors: {phone: 'Please add phone number'}});\n            return;\n        }\n\n        // Save the NEW-UPDATED Contact\n        const updateContact = {\n            name, \n            email,\n            phone\n        }\n\n\n        // Deconstructing id from the params props\n        const { id } = this.props.match.params;\n\n        // Assigning the PUT request results to a variable\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        // Setting up the Action to sent to the Store\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n\n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {\n            name,\n            email,\n            phone,\n            errors\n        } = this.state;\n\n        return ( \n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header text-center\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone Number...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input \n                                        type=\"submit\" \n                                        value=\"Update Contact\"\n                                        className=\"btn btn-dark btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                 }}\n\n            </Consumer>\n        );\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n\nconst Header = props => {\n    const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">\n                {branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"></i> Home\n                            </Link>\n                        </li>\n                        <li className=\"nav item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\"></i> Add\n                            </Link>\n                        </li>\n                        <li className=\"nav item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\"></i> About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n        </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manager contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div className=\"display-4\"> \n      <h1><span className=\"text-danger\">404 Page Not Found</span></h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n  state = {\n    title: '',\n    body: ''\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(response => response.json())\n        .then(data => \n            this.setState({\n          title: data.title,\n          body: data.id\n        })\n      );   \n  }\n  \n  render() {\n    const { title, body }  = this.state;\n    return (\n      <div>\n        <ul>\n          <li> This is the title: {title}</li>\n          <li>This is the id: {body}</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Notfound from './components/pages/Notfound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={Notfound} />\n            </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}